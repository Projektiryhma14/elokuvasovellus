// src/routes/ProtectedRoute.jsx
import { useAuth } from "../context/AuthContext.jsx"
import { FaShieldHalved } from 'react-icons/fa6';
import { FaUser } from "react-icons/fa6";

// Komponentti, joka k√§√§rii suojatun sis√§ll√∂n
// - Jos status = SKELETON ‚Üí odotetaan (ei n√§ytet√§ mit√§√§n viel√§)
// - Jos status != USER ‚Üí n√§ytet√§√§n portti (gate)
// - Jos status = USER ‚Üí n√§ytet√§√§n children (suojattu sis√§lt√∂)
export default function ProtectedRoute({
    children,                                                       // suojattu sis√§lt√∂ (React-elementit)
    gateMessage = "This page requires sign in.",                    // oletusviesti portille
    returnTo                                                        // polku, johon k√§ytt√§j√§ halutaan ohjata loginin j√§lkeen
}) {
    const { status } = useAuth();

    // 1) Jos status = SKELETON ‚Üí odotetaan (AuthContext viel√§ tarkistaa tokenia)
    if (status === "SKELETON") {
        return null;                                                // ei n√§ytet√§ mit√§√§n t√§ss√§ vaiheessa
    }

    if (status !== "USER") {
        // Jos t√§lle reitille annettiin returnTo-prop (esim. "/profile"),
        // tallennetaan se sessionStorageen ‚Üí k√§ytet√§√§n signIn-sivulla
        if (returnTo) sessionStorage.setItem("returnTo", returnTo);

        // N√§ytet√§√§n "portti" eli pieni ilmoitus + linkki kirjautumiseen
        return (
            <div style={{ padding: "2rem" }}>
                <h2>üîí Gate123</h2>

                <p>{gateMessage}</p>
                <p>
                    Jatka kirjautumalla sis√§√§n:{" "}
                    <a href="/signin">Sign in</a>
                </p>
            </div>
        );
    }

    // 3) Jos status = USER ‚Üí k√§ytt√§j√§ on kirjautunut
    // Palautetaan children eli suojattu sis√§lt√∂
    return children;
}